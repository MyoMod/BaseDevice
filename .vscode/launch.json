{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Cortex Debug (RP2040)",
            "cwd": "${workspaceRoot}",
            "executable": "${command:cmake.launchTargetPath}",
            "request": "launch",
            "type": "cortex-debug",
            "servertype": "openocd",
            "gdbPath": "gdb-multiarch",
            "device": "RP2040",
            "openOCDLaunchCommands": [
               "adapter speed 5000"
            ],
            "configFiles": [
              "interface/cmsis-dap.cfg",
              "target/rp2040.cfg"
              ],
            "svdFile": "${env:PICO_SDK_PATH}/src/rp2040/hardware_regs/rp2040.svd",
            "runToEntryPoint": "main",
            // Give restart the same functionality as runToEntryPoint - main
            "postRestartCommands": [
                "break main",
                "continue"
            ],
            "liveWatch": {
              "enabled": true,
              "samplesPerSecond": 4
            }
          },
          {
            "name": "Cortex Debug RT1062",
            "cwd": "${workspaceFolder}",
            "executable": "${workspaceFolder}/build/debug/DPU_CMake.elf",
            "request": "launch",
            "type": "cortex-debug",
            "runToEntryPoint": "main",
            "servertype": "jlink",
            "serverpath": "/usr/bin/JLinkGDBServerCLExe",
            "serverArgs": [],
            "device": "MIMXRT1062XXX6B",
            "interface": "jtag",
            "serialNumber": "",
            "svdPath": "${workspaceFolder}/.vscode/MIMXRT1062.svd",
            "gdbPath": "arm-none-eabi-gdb-py",
            "objdumpPath": "arm-none-eabi-objdump",
            "rttConfig": {
                "enabled": true,
                "address": "auto",
                "decoders": [
                    {
                        "label": "RTT stream",
                        "port": 0,
                        "type": "console"
                    }
                ]
            },
            "preLaunchTask": {
                "type": "cmake",
                "label": "CMake: build",
                "command": "build",
                "targets": [
                    "all"
                ],
                "group": "build",
                "problemMatcher": [],
                "detail": "CMake template build task"
            }
        }
    ]
}
